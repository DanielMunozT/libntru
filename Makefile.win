CC?=gcc
CFLAGS=-g -Wall -Wextra -Wno-unused-parameter -O2
SRCDIR=src
TESTDIR=tests
LIB_OBJS=bitstring.o encparams.o hash.o idxgen.o key.o mgf.o ntru.o poly.o rand.o sha1.o sha2.o
TEST_OBJS=test_bitstring.o test_hash.o test_idxgen.o test_key.o test_ntru.o test.o test_poly.o test_util.o
VERSION=0.2
INST_PFX=%PROGRAMFILES%
INST_HEADERS=ntru.h types.h key.h encparams.h hash.h rand.h err.h

LIB_OBJS_PATHS=$(patsubst %,$(SRCDIR)/%,$(LIB_OBJS))
TEST_OBJS_PATHS=$(patsubst %,$(TESTDIR)/%,$(TEST_OBJS))
DIST_NAME=libntru-$(VERSION)

.PHONY: all
all: lib

.PHONY: lib
lib: $(LIB_OBJS_PATHS)
	$(CC) $(CFLAGS) -shared -o libntru.dll $(LIB_OBJS_PATHS) -lws2_32 -ladvapi32

.PHONY: install
install: lib
	if not exist "%PROGRAMFILES%\libntru" mkdir "%PROGRAMFILES%\libntru"
	if not exist "%PROGRAMFILES%\libntru\include" mkdir "%PROGRAMFILES%\libntru\include"
	copy libntru.dll "%PROGRAMFILES%\libntru"
	copy README.md "%PROGRAMFILES%\libntru"
	for %%h in ($(INST_HEADERS)) do \
	    copy $(SRCDIR)\%%h "%PROGRAMFILES%\libntru\include"

uninstall:
	if exist "%PROGRAMFILES%\libntru\libntru.dll" del "%PROGRAMFILES%\libntru\libntru.dll"
	if exist "%PROGRAMFILES%\libntru\README.md" del "%PROGRAMFILES%\libntru\README.md"
	for %%h in ($(INST_HEADERS)) do \
	    if exist "%PROGRAMFILES%\libntru\include\%%h" del "%PROGRAMFILES%\libntru\include\%%h"
	if exist "%PROGRAMFILES%\libntru\include" rmdir "%PROGRAMFILES%\libntru\include"
	if exist "%PROGRAMFILES%\libntru" rmdir "%PROGRAMFILES%\libntru"

.PHONY: dist
dist:
	@if exist $(DIST_NAME)\$(SRCDIR)\*.c del $(DIST_NAME)\$(SRCDIR)\*.c
	@if exist $(DIST_NAME)\$(SRCDIR)\*.h del $(DIST_NAME)\$(SRCDIR)\*.h
	@if exist $(DIST_NAME)\$(SRCDIR) rmdir $(DIST_NAME)\$(SRCDIR)
	@if exist $(DIST_NAME)\$(TESTDIR)\*.c del $(DIST_NAME)\$(TESTDIR)\*.c
	@if exist $(DIST_NAME)\$(TESTDIR)\*.h del $(DIST_NAME)\$(TESTDIR)\*.h
	@if exist $(DIST_NAME)\$(TESTDIR) rmdir $(DIST_NAME)\$(TESTDIR)
	@if exist $(DIST_NAME)\*.* del /q $(DIST_NAME)\*.*
	@if exist $(DIST_NAME) rmdir $(DIST_NAME)
	mkdir $(DIST_NAME)
	mkdir $(DIST_NAME)\$(SRCDIR)
	mkdir $(DIST_NAME)\$(TESTDIR)
	copy Makefile $(DIST_NAME)
	copy Makefile.win $(DIST_NAME)
	copy Makefile.osx $(DIST_NAME)
	copy README.md $(DIST_NAME)
	copy LICENSE $(DIST_NAME)
	copy PATENTS $(DIST_NAME)
	copy $(SRCDIR)\*.c $(DIST_NAME)\$(SRCDIR)
	copy $(SRCDIR)\*.h $(DIST_NAME)\$(SRCDIR)
	copy $(TESTDIR)\*.c $(DIST_NAME)\$(TESTDIR)
	copy $(TESTDIR)\*.h $(DIST_NAME)\$(TESTDIR)
	@rem zip is provided by MinGW
	zip -rm $(DIST_NAME).zip $(DIST_NAME)

test: lib $(TEST_OBJS_PATHS)
	$(CC) $(CFLAGS) -o test.exe $(TEST_OBJS_PATHS) -L. -lntru -lm
	test.exe

bench: lib $(SRCDIR)/bench.o
	$(CC) $(CFLAGS) -o bench $(SRCDIR)/bench.o -L. -lntru

$(SRCDIR)/%.o: $(SRCDIR)/%.c
	$(CC) $(CFLAGS) -c $< -o $@

$(TESTDIR)/%.o: tests/%.c
	$(CC) $(CFLAGS) -I$(SRCDIR) -c $< -o $@

.PHONY: clean
clean:
	@if exist $(SRCDIR)\*.o del $(SRCDIR)\*.o
	@if exist $(TESTDIR)\*.o del $(TESTDIR)\*.o
	@if exist libntru.dll del libntru.dll
	@if exist test.exe del test.exe
	@if exist bench.exe del bench.exe
	@rem ***** clean files generated on other OSes *****
	@if exist libntru.so del libntru.so
	@if exist libntru.dylib del libntru.dylib
	@if exist test del test
	@if exist bench del bench

.PHONY: distclean
distclean: clean
	@if exist $(DIST_NAME)\$(SRCDIR)\*.c del $(DIST_NAME)\$(SRCDIR)\*.c
	@if exist $(DIST_NAME)\$(SRCDIR)\*.h del $(DIST_NAME)\$(SRCDIR)\*.h
	@if exist $(DIST_NAME)\$(SRCDIR) rmdir $(DIST_NAME)\$(SRCDIR)
	@if exist $(DIST_NAME)\$(TESTDIR)\*.c del $(DIST_NAME)\$(TESTDIR)\*.c
	@if exist $(DIST_NAME)\$(TESTDIR)\*.h del $(DIST_NAME)\$(TESTDIR)\*.h
	@if exist $(DIST_NAME)\$(TESTDIR) rmdir $(DIST_NAME)\$(TESTDIR)
	@if exist $(DIST_NAME)\*.* del /q $(DIST_NAME)\*.*
	@if exist $(DIST_NAME) rmdir $(DIST_NAME)
	@if exist $(DIST_NAME).zip del $(DIST_NAME).zip
	@if exist $(DIST_NAME).tar.xz del $(DIST_NAME).tar.xz
